{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/riot/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Daftvibe/DaftvibeIPFS/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Audio } from 'expo-av';\nimport * as mm from 'music-metadata-browser';\nimport util from 'util';\nvar url = 'https://ipfs.io/ipfs/Qme64zZbcvuXMHnF5nqLmqCN3BBmaPeSu1XBZNbrLbywz3?filename=Amatory_-_Dyshi_so_mnojj_47956889.mp3';\nvar soundObject = new Audio.Sound();\n\nfunction mpPlay(url) {\n  return _regeneratorRuntime.async(function mpPlay$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(soundObject.loadAsync(url));\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(soundObject.playAsync());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction mpStop() {\n  return _regeneratorRuntime.async(function mpStop$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(soundObject.stopAsync());\n\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(soundObject.unloadAsync());\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction mpPause() {\n  return _regeneratorRuntime.async(function mpPause$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(soundObject.pauseAsync());\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction HomeScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      metadata = _useState2[0],\n      setMD = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Home!\", metadata), React.createElement(Button, {\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.t0 = setMD;\n              _context4.t1 = util;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(mm.fetchFromUrl(url));\n\n            case 4:\n              _context4.t2 = _context4.sent;\n              _context4.t3 = _context4.t1.inspect.call(_context4.t1, _context4.t2);\n              return _context4.abrupt(\"return\", (0, _context4.t0)(_context4.t3));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"#000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Songs') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'ios-information-circle' : 'ios-information-circle-outline',\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }\n            });\n          } else if (route.name === 'IPFS') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'ios-list-box' : 'ios-list',\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: 'white',\n      activeBackgroundColor: 'black',\n      inactiveBackgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Songs\",\n    component: HomeScreen,\n    options: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"IPFS\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/riot/Документы/Daftvibe/DaftvibeIPFS/App.js"],"names":["StatusBar","React","useState","Ionicons","NavigationContainer","createBottomTabNavigator","Audio","mm","util","url","soundObject","Sound","mpPlay","loadAsync","playAsync","mpStop","stopAsync","unloadAsync","mpPause","pauseAsync","HomeScreen","metadata","setMD","flex","justifyContent","alignItems","backgroundColor","color","fetchFromUrl","inspect","SettingsScreen","Tab","App","route","tabBarIcon","focused","size","name","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Button, TouchableOpacity, View, Image, Text } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Audio } from 'expo-av';\nimport * as mm from 'music-metadata-browser';\nimport util from 'util';\nvar url = 'https://ipfs.io/ipfs/Qme64zZbcvuXMHnF5nqLmqCN3BBmaPeSu1XBZNbrLbywz3?filename=Amatory_-_Dyshi_so_mnojj_47956889.mp3'\n\nconst soundObject = new Audio.Sound(); //Объект музыки и его функции mp(MusicPlayer)\n\nasync function mpPlay(url) {\n  await soundObject.loadAsync(url);\n  await soundObject.playAsync();\n}\n\nasync function mpStop() {\n  await soundObject.stopAsync()\n  await soundObject.unloadAsync()\n}\n\nasync function mpPause() {\n  await soundObject.pauseAsync()\n}\n\n\n\nfunction HomeScreen() {\n  const [metadata, setMD] = useState(0);\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: \"#000\",}}>\n      <Text style={{color: \"#fff\",}}>Home!{metadata}</Text>\n      <Button onPress={async () => setMD(util.inspect(await mm.fetchFromUrl(url)))}></Button>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: \"#000\",}}>\n      <Text style={{color: \"#fff\",}}>Settings!</Text>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            if (route.name === 'Songs') {\n              return (\n                <Ionicons\n                  name={\n                    focused\n                      ? 'ios-information-circle'\n                      : 'ios-information-circle-outline'\n                  }\n                  size={size}\n                  color={color}\n                />\n              );\n            } else if (route.name === 'IPFS') {\n              return (\n                <Ionicons\n                  name={focused ? 'ios-list-box' : 'ios-list'}\n                  size={size}\n                  color={color}\n                />\n              );\n            }\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'blue',\n          inactiveTintColor: 'white',\n          activeBackgroundColor: 'black',\n          inactiveBackgroundColor: 'black',\n        }}\n      >\n        <Tab.Screen name=\"Songs\" component={HomeScreen} options={{  }} />\n        {/* tabBarBadge: 3 */}\n        <Tab.Screen name=\"IPFS\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}