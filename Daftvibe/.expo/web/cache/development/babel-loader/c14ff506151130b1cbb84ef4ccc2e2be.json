{"ast":null,"code":"var _jsxFileName = \"/home/riot/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Daftvibe/DaftvibeIPFS/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Home!\"));\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"beige\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Songs') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'ios-information-circle' : 'ios-information-circle-outline',\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }\n            });\n          } else if (route.name === 'IPFS') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'ios-list-box' : 'ios-list',\n              size: size,\n              color: color,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: 'gray',\n      activeBackgroundColor: 'black',\n      inactiveBackgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Songs\",\n    component: HomeScreen,\n    options: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"IPFS\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/riot/Документы/Daftvibe/DaftvibeIPFS/App.js"],"names":["StatusBar","React","Ionicons","NavigationContainer","createBottomTabNavigator","HomeScreen","flex","justifyContent","alignItems","SettingsScreen","backgroundColor","Tab","App","route","tabBarIcon","focused","color","size","name","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;AAEA,SAASC,UAAT,GAAsB;AACpB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAKD;;AAED,SAASC,cAAT,GAA0B;AACxB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE,QAAjD;AAA2DE,MAAAA,eAAe,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;;AAED,IAAMC,GAAG,GAAGP,wBAAwB,EAApC;AAEA,eAAe,SAASQ,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;;AACxC,cAAIJ,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AAC1B,mBACE,oBAAC,QAAD;AACE,cAAA,IAAI,EACFH,OAAO,GACH,wBADG,GAEH,gCAJR;AAME,cAAA,IAAI,EAAEE,IANR;AAOE,cAAA,KAAK,EAAED,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,WAZD,MAYO,IAAIH,KAAK,CAACK,IAAN,KAAe,MAAnB,EAA2B;AAChC,mBACE,oBAAC,QAAD;AACE,cAAA,IAAI,EAAEH,OAAO,GAAG,cAAH,GAAoB,UADnC;AAEE,cAAA,IAAI,EAAEE,IAFR;AAGE,cAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF;AAvB4B,OAAhB;AAAA,KADjB;AA0BE,IAAA,aAAa,EAAE;AACbG,MAAAA,eAAe,EAAE,MADJ;AAEbC,MAAAA,iBAAiB,EAAE,MAFN;AAGbC,MAAAA,qBAAqB,EAAE,OAHV;AAIbC,MAAAA,uBAAuB,EAAE;AAJZ,KA1BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiCE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAEjB,UAApC;AAAgD,IAAA,OAAO,EAAE,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAmCE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEI,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF,CADF;AAyCD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: \"beige\",}}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            if (route.name === 'Songs') {\n              return (\n                <Ionicons\n                  name={\n                    focused\n                      ? 'ios-information-circle'\n                      : 'ios-information-circle-outline'\n                  }\n                  size={size}\n                  color={color}\n                />\n              );\n            } else if (route.name === 'IPFS') {\n              return (\n                <Ionicons\n                  name={focused ? 'ios-list-box' : 'ios-list'}\n                  size={size}\n                  color={color}\n                />\n              );\n            }\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'blue',\n          inactiveTintColor: 'gray',\n          activeBackgroundColor: 'black',\n          inactiveBackgroundColor: 'black',\n        }}\n      >\n        <Tab.Screen name=\"Songs\" component={HomeScreen} options={{  }} />\n        {/* tabBarBadge: 3 */}\n        <Tab.Screen name=\"IPFS\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}